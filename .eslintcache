[{"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\index.js":"1","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\App.js":"2","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\reportWebVitals.js":"3","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\auth\\auth.js":"4","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\api\\api_urls.js":"5","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Login_Module\\Common_Login\\Login.js":"6","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Login_Module\\reset_password\\send_email\\Send_email.js":"7","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Login_Module\\reset_password\\reset_password\\Reset_password.js":"8","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Login_Module\\Reset_password\\Reset_password\\Reset_password.js":"9","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Login_Module\\Reset_password\\Send_email\\Send_email.js":"10","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Mock_Data\\constant.js":"11","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\auth\\ProtectedRoute.js":"12","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Shared_Components\\Header\\Header.js":"13","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Trainer_Module\\Trainer\\Trainer.js":"14","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Trainer_Module\\Batch_Module\\Batch_List\\BatchList.js":"15","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Trainer_Module\\Batch_Module\\Session\\Session.js":"16","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\User_Module\\Home_Container\\Home_Container.js":"17","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Main_Module\\Main_Container.js":"18","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\User_Module\\Home_Container\\User_Detail.js":"19","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\User_Module\\Batch_List\\Batch_List.js":"20","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Trainer_Module\\Batch_Module\\Session\\createSession.js":"21","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\User_Module\\Home_Container\\My_Courses\\My_Courses.js":"22","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\User_Module\\Home_Container\\Batch_Details\\Batch_Details.js":"23","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\User_Module\\Home_Container\\Access_Resources\\Access_Resources.js":"24","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Shared_Components\\Loader\\Spinner.js":"25"},{"size":593,"mtime":1609334192504,"results":"26","hashOfConfig":"27"},{"size":1706,"mtime":1613229512011,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":340,"mtime":1607838023188,"results":"30","hashOfConfig":"27"},{"size":787,"mtime":1614614920667,"results":"31","hashOfConfig":"27"},{"size":5961,"mtime":1615203049772,"results":"32","hashOfConfig":"27"},{"size":842,"mtime":1608826823379,"results":"33","hashOfConfig":"34"},{"size":1315,"mtime":1608826923299,"results":"35","hashOfConfig":"34"},{"size":2607,"mtime":1609770863019,"results":"36","hashOfConfig":"27"},{"size":1990,"mtime":1609770000386,"results":"37","hashOfConfig":"27"},{"size":141,"mtime":1607871260922,"results":"38","hashOfConfig":"27"},{"size":818,"mtime":1603271335188,"results":"39","hashOfConfig":"27"},{"size":10594,"mtime":1615212741233,"results":"40","hashOfConfig":"27"},{"size":465,"mtime":1611226731822,"results":"41","hashOfConfig":"27"},{"size":3718,"mtime":1615386556144,"results":"42","hashOfConfig":"27"},{"size":6318,"mtime":1615644315485,"results":"43","hashOfConfig":"27"},{"size":6689,"mtime":1612290049490,"results":"44","hashOfConfig":"27"},{"size":286,"mtime":1610012823194,"results":"45","hashOfConfig":"27"},{"size":2170,"mtime":1612343506794,"results":"46","hashOfConfig":"27"},{"size":3845,"mtime":1615644655828,"results":"47","hashOfConfig":"27"},{"size":4546,"mtime":1613233080143,"results":"48","hashOfConfig":"27"},{"size":5273,"mtime":1615640768555,"results":"49","hashOfConfig":"27"},{"size":5771,"mtime":1615386133264,"results":"50","hashOfConfig":"27"},{"size":2791,"mtime":1612447699700,"results":"51","hashOfConfig":"27"},{"size":939,"mtime":1615386022943,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"267tmh",{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"n0t385",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"55"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"55"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"55"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"55"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"55"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"55"},"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\index.js",[],["119","120"],"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\App.js",["121","122"],"import logo from './logo.svg';\nimport './App.css';\n// import SideNavigationBar from './Shared Components/Header/Header';\nimport Login from './Login_Module/Common_Login/Login';\nimport { Switch, Route } from 'react-router-dom';\nimport Send_email from './Login_Module/Reset_password/Send_email/Send_email';\nimport Reset_password from './Login_Module/Reset_password/Reset_password/Reset_password';\nimport { ProtectedRoute } from './auth/ProtectedRoute';\nimport SideNavigationBar from './Shared_Components/Header/Header';\nimport Trainer from './Trainer_Module/Trainer/Trainer';\nimport Session from './Trainer_Module/Batch_Module/Session/Session';\nimport MainComponent from './Main_Module/Main_Container';\nimport CreateSession from './Trainer_Module/Batch_Module/Session/createSession';\n\n\nfunction App() {\n  return (\n    // <SideNavigationBar />\n    <>\n    {/* <SideNavigationBar/> */}\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <ProtectedRoute  path=\"/user/home\" component={MainComponent} />\n        <ProtectedRoute  path=\"/trainer/:email\" component={Trainer} />\n        \n        {/* <ProtectedRoute exact path=\"/learner/:email\" component={SideNavigationBar} /> */}\n        <ProtectedRoute path=\"/session/:id\" component={Session} />\n        <ProtectedRoute path=\"/sessions/create-session/:id/:sessionIndex\" component={CreateSession} />\n        {/* <ProtectedRoute exact path=\"/sessions\" component={SessionList} />  */}\n        <Route path=\"/forgot-password\" component={Send_email} />\n        <Route path=\"/reset-password/:token\" component={Reset_password} />\n        {/* <Route path=\"*\" component={() => \"404 NOT FOUND\"} /> */}\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\reportWebVitals.js",[],"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\auth\\auth.js",[],"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\api\\api_urls.js",[],"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Login_Module\\Common_Login\\Login.js",["123","124","125","126","127","128","129","130","131","132","133","134"],"import React, { useRef, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport './Login.scss';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport Button from '@material-ui/core/Button';\r\nimport LoginImage from '../../Assets/loginImage.jpg';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Axios from 'axios';\r\nimport { api_urls } from '../../api/api_urls';\r\nimport auth from '../../auth/auth';\r\nimport { Link } from 'react-router-dom';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    padding: {\r\n        paddingBottom: 0\r\n    }\r\n}));\r\n\r\nconst Login = (props) => {\r\n    const classes = useStyles();\r\n    const email = useRef(null);\r\n    const pwd = useRef(null);\r\n\r\n    const [loader, setloader] = useState(false);\r\n    const [data, setdata] = useState(null);\r\n    const [error, setError] = useState(null);\r\n    const [didMount, setDidMount] = useState(false);\r\n    const [type, setType] = useState('password');\r\n    const [show, setShow] = useState(true);\r\n\r\n    let handleLogin = (e) => {\r\n        e.preventDefault();\r\n        if((email.current.value && email.current.value == '') && (pwd.current.value && pwd.current.value == '')){\r\n            setError(false);\r\n        }\r\n        // check if the input fields are filled and make http call\r\n        Axios.post(`${api_urls.login}?email=${email.current.value}&password=${pwd.current.value}`)\r\n            .then(res => {\r\n                const userCred = {\r\n                    email: res.data.email,\r\n                    password: res.data.password\r\n                }\r\n                sessionStorage.setItem('userCred', JSON.stringify(userCred))\r\n                setdata(res.data);\r\n            })\r\n            .catch(err => {\r\n                setError(err);\r\n                // refreshForm();\r\n            })\r\n            .finally(res => {\r\n               \r\n            })\r\n    }\r\n    \r\n    if (data && data.role == 'Trainer' && data.active == true) {\r\n        auth.login(() => {\r\n            props.history.push(`/trainer/${data.email}`);\r\n        });\r\n    } else if (data && data.role == 'Learner' && data.active == true) {\r\n        auth.login(() => {\r\n            props.history.push({\r\n                pathname: `/user/home`,\r\n                // pathname: `/learner/${data.email}`,\r\n                state: data\r\n            });\r\n        });\r\n    }\r\n\r\n    let refreshForm = () => {\r\n        email.current.value = '';\r\n        pwd.current.value = '';\r\n    }\r\n\r\n    let handleIicon = () => {\r\n        if(pwd.current.value) {\r\n            let setPwdType = (type === 'password' ? 'text' : 'password')\r\n            setType(setPwdType);\r\n            setShow(!show);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"loginContainer\">\r\n                <Card>\r\n                    <CardContent className=\"cardContent\">\r\n                        <Grid className=\"cardContainer\" container>\r\n                            <Grid className=\"leftPane\" md={6} item xs={12}>\r\n                                <Link to=\"/\"><img src={LoginImage} alt=\"\" /></Link>\r\n                            </Grid>\r\n                            <Grid className=\"rightPane\" md={6} item xs={12}>\r\n                                {error && <Alert severity=\"warning\">Username or Password is incorrect</Alert>}\r\n                                <h2>Log In</h2>\r\n                                <form>\r\n                                    <div className=\"form-control\">\r\n                                        <MailOutlineIcon /><input type=\"text\" name=\"email\" placeholder=\"Your Email ID\" ref={email} />\r\n                                        {/* <small>This field is required</small> */}\r\n                                    </div>\r\n                                    <div className=\"form-control\">\r\n                                        <LockOpenIcon />\r\n                                        <div>\r\n                                            <input type={type} name=\"password\" placeholder=\"Password\" ref={pwd} />\r\n                                            {/* <small>This field is required</small> */}\r\n                                        </div>\r\n                                        {show ? <VisibilityIcon onClick={handleIicon} /> : <VisibilityOffIcon onClick={handleIicon} />}\r\n                                    </div>\r\n                                    <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\" className=\"loginDetails\">\r\n                                        {/* <div>\r\n                                            <input type=\"checkbox\" name=\"rememberMe\" /> <span>Remember me</span>\r\n                                        </div> */}\r\n                                        <div style={{ color: '#3f51b5', fontWeight: '500', textDecoration: 'underline' }}>\r\n                                            <Link to=\"forgot-password\"><span>Forgot password?</span></Link>\r\n                                        </div>\r\n                                    </Grid>\r\n                                    <div>\r\n                                        <Button variant=\"contained\" color=\"primary\" onClick={handleLogin}>\r\n                                            Log in\r\n                                        </Button>\r\n                                    </div>\r\n                                </form>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login;","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Login_Module\\reset_password\\send_email\\Send_email.js",[],["135","136"],"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Login_Module\\reset_password\\reset_password\\Reset_password.js",[],"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Login_Module\\Reset_password\\Reset_password\\Reset_password.js",[],"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Login_Module\\Reset_password\\Send_email\\Send_email.js",[],"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Mock_Data\\constant.js",[],"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\auth\\ProtectedRoute.js",[],"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Shared_Components\\Header\\Header.js",["137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport logo from '../../Assets/Blue.png';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MyCourses from '../../User_Module/Home_Container/My_Courses/My_Courses';\r\nimport BatchDetails from '../../User_Module/Home_Container/Batch_Details/Batch_Details';\r\nimport AccessResources from '../../User_Module/Home_Container/Access_Resources/Access_Resources';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport './Header.scss';\r\nimport { Link, Switch, useRouteMatch } from 'react-router-dom';\r\nimport UserDetail from \"../../User_Module/Home_Container/User_Detail\";\r\nimport { ProtectedRoute } from \"../../auth/ProtectedRoute\";\r\nimport BatchList from \"../../User_Module/Batch_List/Batch_List\";\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        marginBottom: \"16px\"\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0\r\n        }\r\n    },\r\n    appBar: {\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n            marginLeft: drawerWidth\r\n        }\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"none\"\r\n        }\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    }\r\n}));\r\n\r\nfunction SideNavigationBar(props) {\r\n\r\n    let { path, url } = useRouteMatch();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const [spacing, setSpacing] = React.useState(4);\r\n    const { window } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const [MenuId, setMenuId] = useState('default')\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n    const [menue, setmenue] = useState([\r\n        { title: \"My Courses\", id: 'myCourses', path: 'my-courses', icon: 'DetailsIcon' },\r\n        { title: \"Batch Details\", id: 'batchDetails', path: 'batch-details', icon: 'DetailsIcon' },\r\n        { title: \"Access Resources\", id: 'accessResources', path: 'access-resources', icon: 'DetailsIcon' }])\r\n\r\n\r\n    const showMenuDetailHandler = (menuid = 'default') => {\r\n        setMenuId(menuid)\r\n        if (menuid == 'accessResources') {\r\n            setOpenModal(true);\r\n            props.data.history.push('/user/home/access-resources');\r\n        } else if (menuid == 'batchDetails') {\r\n            props.data.history.push('/user/home/batch-details');\r\n        } else {\r\n            props.data.history.push('/user/home');\r\n        }\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setOpenModal(false);\r\n        showMenuDetailHandler();\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handlerLogout = () => {\r\n        props.data.history.push('/');\r\n    }\r\n\r\n\r\n    const renderIcon = (menuid) => {\r\n        if (menuid == 'accessResources') {\r\n           return <AccessibilityIcon color=\"primary\"/>\r\n        } else if (menuid == 'batchDetails') {\r\n            return <DetailsIcon color=\"primary\"/>\r\n        } else {\r\n            return <DashboardIcon color=\"primary\"/>\r\n        }\r\n    }\r\n    \r\n    const drawer = (\r\n        <div className=\"header\">\r\n            <Grid item xs={12} className=\"Logo\">\r\n                <Grid container justify=\"center\">\r\n                    <img src={logo} alt=\"img not found\" />\r\n                </Grid>\r\n            </Grid>\r\n            <List>\r\n                {menue.map((text, index) => (\r\n                    <ListItem button key={index} onClick={() => showMenuDetailHandler(text.id)}>\r\n                        <ListItemIcon>\r\n                            {renderIcon(text.id)}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={text.title} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    const container =\r\n        window !== undefined ? () => window().document.body : undefined;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar className=\"header-items\">\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                        Teqstories LMS\r\n                    </Typography>\r\n                    <div>\r\n                        <IconButton\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls=\"menu-appbar\"\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMenu}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"menu-appbar\"\r\n                            anchorEl={anchorEl}\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            keepMounted\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right',\r\n                            }}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                            <MenuItem onClick={handlerLogout}>Logout</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === \"rtl\" ? \"right\" : \"left\"}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n                <Hidden xsDown implementation=\"css\">\r\n                    <Drawer\r\n                        classes={{\r\n                            paper: classes.drawerPaper\r\n                        }}\r\n                        variant=\"permanent\"\r\n                        open\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n            <main className={classes.content}>\r\n                <div>\r\n                    <Switch>\r\n                        {/* <ProtectedRoute exact path={`${path}`}>\r\n                                <UserDetail data={props} menuID={MenuId} openModal={openModal} handleModalClose={handleModalClose} />\r\n                            </ProtectedRoute> */}\r\n                        {/* <ProtectedRoute path={`${path}/learner/:email`}>\r\n                                <UserDetail />\r\n                            </ProtectedRoute> */}\r\n                        <ProtectedRoute exact path={`${path}`}>\r\n                            <MyCourses data={props} />\r\n                        </ProtectedRoute>\r\n                        <ProtectedRoute path={`${path}/batch-details`}>\r\n                            <BatchDetails data={props} />\r\n                        </ProtectedRoute>\r\n                        <ProtectedRoute path={`${path}/access-resources`}>\r\n                            <AccessResources data={props} openModal={openModal} handleModalClose={handleModalClose} />\r\n                        </ProtectedRoute>\r\n                        <ProtectedRoute path={`${path}/batch-list/:batchID`} component={BatchList} />\r\n                    </Switch>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nSideNavigationBar.propTypes = {\r\n    /**\r\n     * Injected by the documentation to work in an iframe.\r\n     * You won't need it on your project.\r\n     */\r\n    window: PropTypes.func\r\n};\r\n\r\nexport default SideNavigationBar;","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Trainer_Module\\Trainer\\Trainer.js",["151","152"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport auth from '../../auth/auth'\r\nimport BatchList from '../Batch_Module/Batch_List/BatchList';\r\nimport './Trainer.scss';\r\n\r\nfunction Trainer(props) {\r\n\r\n    let logout = () => {\r\n        auth.logout(() => {\r\n            props.history.push(\"/\");\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <BatchList trainerData={props} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trainer\r\n","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Trainer_Module\\Batch_Module\\Batch_List\\BatchList.js",["153","154","155"],"import Axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { api_urls } from '../../../api/api_urls'\r\nimport './BatchList.scss';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Spinner from '../../../Shared_Components/Loader/Spinner';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nfunction BatchList(props) {\r\n    const [batches, setbatches] = useState([]);\r\n    const [loader, setLoader] = useState(true);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        getBatchData();\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    const getBatchData = () => {\r\n        Axios.get(`${api_urls.getTrainerDetails}?email=${props.trainerData.match.params.email}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setbatches(res.data.batches)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(res => {\r\n                console.log(res);\r\n                setLoader(false);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root} id=\"trainer-batch-list\">\r\n            <Spinner loading={loader} />\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <h2>Batch Details</h2>\r\n                </Grid>\r\n\r\n                {\r\n                    batches && batches.map(res => (\r\n                        <Grid item xs={6}>\r\n                            <div className=\"row batch-list-container\" key={res.id}>\r\n                                <div className=\"col-lg-12\">\r\n                                    <h3>{res.course}</h3>\r\n                                </div>\r\n                                <div className={classes.root}>\r\n                                    <Grid container spacing={2}>\r\n                                    <Grid item xs={6} sm={6}>\r\n                                        <h4>Start Date:</h4>\r\n                                        <small>{res.dateStart}</small>\r\n                                    </Grid>\r\n                                    <Grid item xs={6} sm={6}>\r\n                                        <h4>End Date</h4>\r\n                                        <small>{res.dateEnd}</small>\r\n                                    </Grid>\r\n                                    </Grid>\r\n                                </div>\r\n                                <div className={classes.root}>\r\n                                <Grid container spacing={2}>\r\n                                <Grid item xs={6} sm={6}>\r\n                                    <h4>Batch Time</h4>\r\n                                    <small>{res.batchTime}</small>\r\n                                </Grid>\r\n                                <Grid item xs={6} sm={6}>\r\n                                    <h4>Weekday/Weekend</h4>\r\n                                    <small>{res.wd_or_wnd}</small>\r\n                                </Grid>\r\n                                </Grid>\r\n                                </div>\r\n                                <div className=\"col-lg-12 text-right\">\r\n                                    <Link to={\"/session\" + '/' + res.batchId}><a>Access Session</a></Link>\r\n                                </div>\r\n                            </div>\r\n                        </Grid>\r\n                    ))\r\n\r\n                }\r\n\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BatchList\r\n","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Trainer_Module\\Batch_Module\\Session\\Session.js",["156","157","158","159","160","161","162","163","164","165","166"],"import React, { useEffect, useState, useRef } from 'react'\r\nimport { api_urls } from '../../../api/api_urls';\r\nimport './Session.scss';\r\nimport Axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport { Link } from 'react-router-dom';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport EditOutlinedIcon from '@material-ui/icons/Edit';\r\nimport Spinner from '../../../Shared_Components/Loader/Spinner';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        marginBottom: \"16px\",\r\n        marginTop: '40px'\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n}))\r\n\r\nfunction Session(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    let sessionIndex;\r\n    let batchId;\r\n\r\n    const [session, setSessions] = useState([]);\r\n    const [sessionIndexVal, setSessionIndexVal] = useState(null);\r\n    const [batchIdVal, setBatchIdVal] = useState(null);\r\n    const [getOneSessionDetail, setOneSessionDetail] = useState({})\r\n    const [open, setOpen] = useState(false);\r\n    const [showVideo, setShowVideo] = useState(null);\r\n    const [loader, setLoader] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getSessions();\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    const getSessions = () => {\r\n        // get the sessions\r\n        Axios.get(`${api_urls.getInfoOfOneBatch}?batchId=${props.match.params.id}`)\r\n            .then(res => {\r\n                console.log(res.data.sessionList);\r\n                setSessions(res.data.sessionList);\r\n                setSessionIndexVal(res.data.sessionList[res.data.sessionList.length - 1].sessionIndex)\r\n                setBatchIdVal(res.data.batchId);\r\n                let vidLink = res.data.sessionList[0].videoLink;\r\n                linkManipulation(vidLink);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(res => {\r\n                console.log(res);\r\n                setLoader(false);\r\n            })\r\n    }\r\n\r\n    const showSessionDetails = (res) => {\r\n        console.log(res);\r\n        setOneSessionDetail(res)\r\n        console.log(getOneSessionDetail.sessionNotes);\r\n    }\r\n\r\n    // Link manipuation for video playing \r\n    const linkManipulation = (vidLink) => {\r\n        if (vidLink.includes('drive.google.com')) {\r\n            setShowVideo(vidLink.replace('view?usp=sharing', 'preview'));\r\n        } else if (vidLink.includes('https://transcripts.gotomeeting.com/')) {\r\n            setShowVideo(vidLink);\r\n        }\r\n    }\r\n\r\n    const openResources = (transLink) => {\r\n        transLink = 'https://drive.google.com/uc?export=view&id=' + transLink.split('/')[5];\r\n        console.log(transLink);\r\n        window.open(transLink)\r\n    }\r\n\r\n    const deleteVid = (id) => {\r\n        Axios.delete(`${api_urls.deleteSession}?sessionId=${id}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                getSessions(res.id);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(res => {\r\n                console.log(res);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Spinner loading={loader} />\r\n            <Grid container>\r\n                <Grid item md={3} xs={6} sm={3}>\r\n                    <div className=\"sessionList\">\r\n                        <Card className={classes.root} variant=\"outlined\" className=\"batchList\">\r\n                            <CardContent style={{ padding: '0' }}>\r\n                                {\r\n                                    session && session.map((res, index) => (\r\n                                        <div>\r\n                                            <Typography className=\"batch-details\">\r\n                                                <h3 onClick={() => linkManipulation(res.videoLink)} className=\"session-list-header\">Section : {res.sessionTitle} </h3>\r\n                                                {res.transcriptLink ? <Button variant=\"contained\" color=\"primary\" onClick={() => openResources(res.transcriptLink)}>\r\n                                                    Resources\r\n                                                </Button> : null}\r\n                                                <DeleteOutlinedIcon color=\"primary\" onClick={() => deleteVid(res.sessionId)} />\r\n                                                <Link to={`/sessions/create-session/${props.match.params.id}/${res.sessionId}?sessionId=${res.sessionId}`}><EditOutlinedIcon color=\"primary\" /></Link>\r\n                                            </Typography>\r\n                                            <Divider />\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item md={9} xs={6} sm={3}>\r\n                    <div>\r\n                        <iframe width=\"560\" height=\"315\" src={showVideo} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                    </div>\r\n                    <div>\r\n                        <Link to={`/sessions/create-session/${props.match.params.id}/${sessionIndexVal}`}>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                className={classes.button}\r\n                                startIcon={<CloudUploadIcon />}\r\n                            >\r\n                                Create session\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Session\r\n","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\User_Module\\Home_Container\\Home_Container.js",["167","168"],"import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { batchDetails, accessResources } from \"../../Mock_Data/constant\";\r\nimport './Home_Container.scss';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst HomeContainer = (props) => {\r\n    console.log(props);\r\n    let { url } = useRouteMatch();\r\n    console.log(props);\r\n    // { menuID, data }\r\n    const useStyles = makeStyles((theme)=>({\r\n        root: {\r\n            marginBottom: 16\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n            marginTop: 12,\r\n        },\r\n        modal: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          },\r\n          paper: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n          },\r\n    }));\r\n\r\n    \r\n    const classes = useStyles();\r\n\r\n    const myCourses =\r\n        <Card className={classes.root} variant=\"outlined\">\r\n            <CardContent style={{ padding: '16px' }}>\r\n                <div>\r\n\r\n                </div>\r\n                <Typography variant=\"h6\">\r\n                    Courses\r\n                </Typography>\r\n\r\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                    Your recent courses\r\n                </Typography>\r\n                <Divider />\r\n                {\r\n                    props.data.data.data && props.data.data.data.location.state.batchAllocated.map(res => (\r\n                        <>\r\n                            <Typography variant=\"body1\" className={classes.pos}>\r\n                                {res.course}\r\n                            </Typography>\r\n                            <Divider />\r\n                            {/* <div className=\"view-btn\">\r\n                                <Button variant=\"contained\" color=\"primary\" className={classes.pos}>\r\n                                    View Batch Sessions\r\n                                        </Button>\r\n                            </div> */}\r\n                        </>\r\n                    )\r\n                    )\r\n                }\r\n            </CardContent>\r\n\r\n        </Card>;\r\n\r\n    switch (props.data.menuID) {\r\n        case myCourses:\r\n            return myCourses;\r\n        case batchDetails:\r\n            return (\r\n                <>\r\n                    {\r\n                        props.data.data.data && props.data.data.data.location.state.batchAllocated.map(res => (\r\n\r\n                            <Card className={classes.root} variant=\"outlined\">\r\n                                <CardContent style={{ padding: '16px' }}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Batch Details\r\n                    </Typography>\r\n                                    <Typography variant=\"body1\" className={classes.pos}>\r\n                                        Course: {res.course}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <Typography variant=\"body1\" className={classes.pos}>\r\n                                        Start Date: {res.dateStart}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <Typography variant=\"body1\" className={classes.pos}>\r\n                                        End Date: {res.dateEnd}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <Typography variant=\"body1\" className={classes.pos}>\r\n                                        Session Link: {res.batchMeetingLink}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <Typography variant=\"body1\" className={classes.pos}>\r\n                                        Batch Time: {res.batchTime}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <div className=\"view-btn\">\r\n                                        <Link to={`${props.data.data.data.match.path}/batch-list/${res.batchId}`}><Button variant=\"contained\" color=\"primary\" className={classes.pos}>\r\n                                            View Batch Sessions\r\n                                        </Button></Link>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                        ))\r\n                    }\r\n                </>\r\n            )\r\n        case accessResources:\r\n            return (\r\n                <div>\r\n                    <Modal\r\n                        aria-labelledby=\"transition-modal-title\"\r\n                        aria-describedby=\"transition-modal-description\"\r\n                        className={classes.modal}\r\n                        open={props.data.openModal}\r\n                        onClose={props.data.handleModalClose}\r\n                        closeAfterTransition\r\n                        BackdropComponent={Backdrop}\r\n                        BackdropProps={{\r\n                            timeout: 500,\r\n                        }}\r\n                    >\r\n                        <Fade in={props.data.openModal}>\r\n                            <div className={classes.paper}>\r\n                                <h2 id=\"transition-modal-title\">Dear User!</h2>\r\n                                <p id=\"transition-modal-description\">You are not allowed to access this resources :(</p>\r\n                                <button type=\"button\" onClick={props.data.handleModalClose}>\r\n                                   Close\r\n                                </button>\r\n                            </div>\r\n                        </Fade>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        default:\r\n            return myCourses;\r\n    }\r\n}\r\n\r\n\r\nexport default HomeContainer\r\n","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Main_Module\\Main_Container.js",[],"E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\User_Module\\Home_Container\\User_Detail.js",["169","170"],"import React from 'react';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HomeContainer from './Home_Container';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        marginBottom: \"16px\"\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            display: \"none\"\r\n        }\r\n    },\r\n    // necessary for content to be below app bar\r\n    toolbar: theme.mixins.toolbar,\r\n   \r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3)\r\n    }\r\n}));\r\nconst UserDetail = (props) => {\r\n    \r\n    console.log(props);\r\n\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <>\r\n            <div className={classes.toolbar} />\r\n            <Typography variant=\"h4\">\r\n                Overview\r\n                </Typography>\r\n            <Card className={classes.root} variant=\"outlined\" style={{}}>\r\n                <CardContent style={{ padding: '16px' }}> \r\n                    <div className=\"subscriptionContainer\">\r\n                        <div style={{}}></div>  <div>Your subscription is active</div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"flex-start\"\r\n                className=\"c1-batch-list-details\"\r\n            >\r\n                <div className=\"c1-batch-list\">\r\n                    <HomeContainer data={props} />\r\n                </div>\r\n                <div className=\"c1-batch-list\">\r\n                    <iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/lzYabsBSXpA\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                </div>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserDetail;","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\User_Module\\Batch_List\\Batch_List.js",["171","172","173","174"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Axios from 'axios'\r\nimport { api_urls } from '../../api/api_urls';\r\nimport './Batch_List.scss';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        marginBottom: \"16px\",\r\n        marginTop: '40px'\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n}))\r\n\r\nconst BatchList = (props) => {\r\n\r\n    console.log('batch list', props);\r\n\r\n    const [batch, batchListDetails] = useState([]);\r\n    const [showVideo, setShowVideo] = useState(null);\r\n\r\n    const getSessions = () => {\r\n        // get the sessions\r\n        Axios.get(`${api_urls.getInfoOfOneBatch}?batchId=${props.match.params.batchID}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                batchListDetails(res.data.sessionList);\r\n                let lastIndexOfVidLink = res.data.sessionList[0].videoLink.replace('view?usp=sharing', 'preview');\r\n                console.log('video Updated Link', lastIndexOfVidLink);\r\n                setShowVideo(lastIndexOfVidLink);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(res => {\r\n                console.log(res);\r\n            })\r\n    }\r\n\r\n    const openResources = (transLink) => {\r\n        transLink = 'https://drive.google.com/uc?export=view&id=' + transLink.split('/')[5];\r\n        console.log(transLink);\r\n        window.open(transLink)\r\n    }\r\n\r\n    const handleVideo = (videoLink) => {\r\n        let vidLink = videoLink.replace('view?usp=sharing', 'preview');\r\n        setShowVideo(vidLink);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getSessions();\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.toolbar} />\r\n            <Grid container>\r\n                <Grid item xs={8}>\r\n                    <iframe width=\"560\" height=\"315\" src={showVideo} frameborder=\"0\"\r\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n                        allowfullscreen></iframe>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    {/* <Paper className={classes.paper}>xs=6</Paper> */}\r\n                    <Card className={classes.root} variant=\"outlined\" className=\"batchList\">\r\n                        <CardContent style={{ padding: '0' }}>\r\n                            {\r\n                                batch.map((res, index) => (\r\n                                    <>\r\n                                        <Typography className=\"batch-details\">\r\n                                            <h3 onClick={() => handleVideo(res.videoLink)} className=\"session-list-header\">Section {index + 1}: {res.sessionTitle}</h3>\r\n                                            {res.transcriptLink ? <Button variant=\"contained\" color=\"primary\" onClick={() => openResources(res.transcriptLink)}>\r\n                                                Resources\r\n                                                </Button> : null}\r\n                                        </Typography>\r\n                                        <Divider />\r\n                                    </>\r\n                                ))\r\n                            }\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BatchList;","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Trainer_Module\\Batch_Module\\Session\\createSession.js",["175","176","177"],"import React, { useRef, useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { api_urls } from '../../../api/api_urls';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    },\r\n}));\r\nfunction useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst CreateSession = (props) => {\r\n    const classes = useStyles();\r\n    let query = useQuery();\r\n    const querySessionId = query.get(\"sessionId\");\r\n    console.log('create session', props);\r\n    console.log('id', query.get(\"sessionId\"))\r\n    const sessId = useRef();\r\n    const videoLink = useRef();\r\n    const transcriptLink = useRef();\r\n    const sessionNotes = useRef();\r\n    const sessionTitle = useRef();\r\n\r\n    function getSession() {\r\n        Axios.get(`${api_urls.getSession}?sessionId=${querySessionId}`)\r\n            .then(res => {\r\n                    sessId.current.value = res.data.sessionId;\r\n                    videoLink.current.value = res.data.videoLink;\r\n                    transcriptLink.current.value = res.data.transcriptLink;\r\n                    sessionTitle.current.value = res.data.sessionTitle;\r\n                    sessionNotes.current.value = res.data.sessionNotes;\r\n            })\r\n            .catch(res => console.log(res));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(querySessionId){\r\n            getSession();\r\n        }\r\n        return () => {\r\n        }\r\n    }, [])\r\n\r\n    const addSessions = (e) => {\r\n        e.preventDefault();\r\n        let addSession = {\r\n            sessionIndex: props.match.params.sessionIndex ? (parseInt(props.match.params.sessionIndex) + 1) : 1,\r\n            videoLink: videoLink.current.value,\r\n            transcriptLink: transcriptLink.current.value,\r\n            sessionTitle: sessionTitle.current.value,\r\n            sessionNotes: sessionNotes.current.value,\r\n            batch: {\r\n                batchId: parseInt(props.match.params.id)\r\n            }\r\n        }\r\n        console.log('sessId',sessId.current.value);\r\n        if(sessId.current.value==''){\r\n            Axios.post(`${api_urls.createNewSession}`, addSession)\r\n            .then(res => {\r\n                console.log(res)\r\n                // getSessions();\r\n                props.history.push(`/session/${props.match.params.id}`)\r\n            })\r\n            .catch(res => console.log(res));\r\n        }else {\r\n            addSession.sessionId = sessId.current.value;\r\n            Axios.put(`${api_urls.updateSession}`, addSession)\r\n            .then(res => {\r\n                console.log('put',res)\r\n                // getSessions();\r\n                props.history.push(`/session/${props.match.params.id}`)\r\n            })\r\n            .catch(res => console.log(res));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={addSessions} className={classes.root} noValidate autoComplete=\"off\">\r\n            <input type=\"hidden\" ref={sessId}/>\r\n            <div>\r\n                <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Video Link\"\r\n                    variant=\"outlined\"\r\n                    inputRef={videoLink}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Session Title\"\r\n                    variant=\"outlined\"\r\n                    inputRef={sessionTitle}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Transcript Link\"\r\n                    variant=\"outlined\"\r\n                    inputRef={transcriptLink}\r\n                />\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"Notes\"\r\n                    multiline\r\n                    rows={4}\r\n                    variant=\"outlined\"\r\n                    inputRef={sessionNotes}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                    Submit\r\n                </Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreateSession;","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\User_Module\\Home_Container\\My_Courses\\My_Courses.js",["178","179","180","181","182","183","184","185"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport '../Home_Container.scss';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { api_urls } from '../../../api/api_urls';\r\nimport Axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Spinner from '../../../Shared_Components/Loader/Spinner';\r\n\r\nconst MyCourses = (props) => {\r\n\r\n    // { menuID, data }\r\n    const [data, setdata] = useState(null);\r\n    const [loader, setLoader] = useState(true);\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            marginBottom: 16,\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n            marginTop: 12,\r\n        },\r\n        modal: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        paper: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        let userCred = sessionStorage.getItem('userCred');\r\n        let userData = JSON.parse(userCred);\r\n        console.log(userData);\r\n        console.log(userCred);\r\n        Axios.post(`${api_urls.login}?email=${userData.email}&password=${userData.password}`)\r\n            .then(res => {\r\n                setdata(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(res => {\r\n                console.log('finally');\r\n                setLoader(false);\r\n            })\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <div id=\"main-container\">\r\n            <Spinner loading={loader} />\r\n            <Typography variant=\"h4\">\r\n                Overview\r\n                </Typography>\r\n            <Card className={classes.root} variant=\"outlined\" style={{}}>\r\n                <CardContent style={{ padding: '16px' }}>\r\n                    <div className=\"subscriptionContainer\">\r\n                        <div style={{}}></div>  <div>Your subscription is active</div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"flex-start\"\r\n                className=\"c1-batch-list-details\"\r\n            >\r\n                <Card variant=\"outlined\" className=\"user-cards\" style={{ width: '50%' }}>\r\n                    <CardContent style={{ padding: '16px' }}>\r\n                        <div>\r\n\r\n                        </div>\r\n                        <Typography variant=\"h6\">\r\n                            Courses\r\n                </Typography>\r\n\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                            Your recent courses\r\n                </Typography>\r\n                        <Divider />\r\n                        {\r\n                            data && data.batchAllocated.map(res => (\r\n                                <>\r\n                                    <Typography variant=\"body1\" className={classes.pos}>\r\n                                        {res.course}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <div className=\"view-btn\">\r\n                                        <Button variant=\"contained\" color=\"primary\" className={classes.pos} onClick={()=>window.open(res.batchMeetingLink)}>\r\n                                            Join the Session\r\n                                    </Button>\r\n                                    </div>\r\n                                    {/* <div className=\"view-btn\">\r\n                                <Button variant=\"contained\" color=\"primary\" className={classes.pos}>\r\n                                    View Batch Sessions\r\n                                        </Button>\r\n                            </div> */}\r\n                                </>\r\n                            )\r\n                            )\r\n                        }\r\n\r\n                    </CardContent>\r\n                </Card>\r\n                <div className=\"c1-batch-list\">\r\n                    <iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/lzYabsBSXpA\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                </div>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyCourses\r\n","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\User_Module\\Home_Container\\Batch_Details\\Batch_Details.js",["186","187","188","189","190","191","192"],"import React, { useRef, useState, useEffect } from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport '../Home_Container.scss';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport { api_urls } from '../../../api/api_urls';\r\nimport Axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Spinner from '../../../Shared_Components/Loader/Spinner';\r\n\r\nconst BatchDetails = (props) => {\r\n    console.log(props);\r\n    const [data, setdata] = useState(null);\r\n    const [loader, setLoader] = useState(true);\r\n    // { menuID, data }\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            marginBottom: 16,\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n            marginTop: 12,\r\n        },\r\n        modal: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        paper: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        let userCred = sessionStorage.getItem('userCred');\r\n        let userData = JSON.parse(userCred);\r\n        console.log(userData);\r\n        console.log(userCred);\r\n        Axios.post(`${api_urls.login}?email=${userData.email}&password=${userData.password}`)\r\n            .then(res => {\r\n                setdata(res.data);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(res => {\r\n                console.log('finally');\r\n                setLoader(false);\r\n            })\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div  id=\"main-container\">\r\n            <Spinner loading={loader} />\r\n            <Typography variant=\"h4\">\r\n                Overview\r\n                </Typography>\r\n            <Card className={classes.root} variant=\"outlined\" style={{}}>\r\n                <CardContent style={{ padding: '16px' }}>\r\n                    <div className=\"subscriptionContainer\">\r\n                        <div style={{}}></div>  <div>Your subscription is active</div>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"flex-start\"\r\n                className=\"c1-batch-list-details\"\r\n            >\r\n                <div style={{ width: '50%' }}>\r\n                    {\r\n                        data && data.batchAllocated.map(res => (\r\n\r\n                            <Card variant=\"outlined\">\r\n                                <CardContent style={{ padding: '16px' }}>\r\n                                    <Typography variant=\"h6\">\r\n                                        Batch Details\r\n                    </Typography>\r\n                                    <Typography variant=\"body1\" className={classes.pos}>\r\n                                        Course: {res.course}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <Typography variant=\"body1\" className={classes.pos}>\r\n                                        Start Date: {res.dateStart}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <Typography variant=\"body1\" className={classes.pos}>\r\n                                        End Date: {res.dateEnd}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <Typography variant=\"body1\" className={classes.pos}>\r\n                                        Session Link: {res.batchMeetingLink}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <Typography variant=\"body1\" className={classes.pos}>\r\n                                        Batch Time: {res.batchTime}\r\n                                    </Typography>\r\n                                    <Divider />\r\n                                    <div className=\"view-btn\">\r\n                                        <Link to={`${props.data.data.match.path}/batch-list/${res.batchId}`}><Button variant=\"contained\" color=\"primary\" className={classes.pos}>\r\n                                            View Batch Sessions\r\n                                        </Button></Link>\r\n                                    </div>\r\n                                </CardContent>\r\n                            </Card>\r\n\r\n                        ))\r\n                    }\r\n                </div>\r\n                <div className=\"c1-batch-list\">\r\n                    <iframe width=\"100%\" height=\"315\" src=\"https://www.youtube.com/embed/lzYabsBSXpA\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n                </div>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default BatchDetails\r\n","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\User_Module\\Home_Container\\Access_Resources\\Access_Resources.js",["193","194","195","196","197","198","199","200"],"import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\n// import { batchDetails, accessResources } from \"../../Mock_Data/constant\";\r\nimport '../Home_Container.scss';\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst AccessResources = (props) => {\r\n    console.log(props);\r\n    let { url } = useRouteMatch();\r\n    console.log(props);\r\n    // { menuID, data }\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            marginBottom: 16\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n            marginTop: 12,\r\n        },\r\n        modal: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        paper: {\r\n            backgroundColor: theme.palette.background.paper,\r\n            border: '2px solid #000',\r\n            boxShadow: theme.shadows[5],\r\n            padding: theme.spacing(2, 4, 3),\r\n        },\r\n    }));\r\n\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n             <div>\r\n                    <Modal\r\n                        aria-labelledby=\"transition-modal-title\"\r\n                        aria-describedby=\"transition-modal-description\"\r\n                        className={classes.modal}\r\n                        open={props.openModal}\r\n                        onClose={props.handleModalClose}\r\n                        closeAfterTransition\r\n                        BackdropComponent={Backdrop}\r\n                        BackdropProps={{\r\n                            timeout: 500,\r\n                        }}\r\n                    >\r\n                        <Fade in={props.openModal}>\r\n                            <div className={classes.paper}>\r\n                                <h2 id=\"transition-modal-title\">Dear User!</h2>\r\n                                <p id=\"transition-modal-description\">You are not allowed to access this resources :(</p>\r\n                                <button type=\"button\" onClick={props.handleModalClose}>\r\n                                   Close\r\n                                </button>\r\n                            </div>\r\n                        </Fade>\r\n                    </Modal>\r\n                </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AccessResources\r\n","E:\\new-teqstories\\TEQ-LMS\\new-teq-lms\\tqs-learning-mangement-system\\src\\Shared_Components\\Loader\\Spinner.js",["201"],"import ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { css } from \"@emotion/core\";\r\n\r\n\r\n\r\nconst override = css` \r\n  position: fixed;\r\n  left: 0px;\r\n  top: 0px;\r\n  z-index: 9999;\r\n`;\r\n\r\n\r\nlet Spinner = (props) => {\r\n  return (\r\n    <>\r\n      {props.loading &&\r\n      <>\r\n       <div style={{\r\n        background: '#4c4747',\r\n        position: 'absolute',\r\n        top: '0',\r\n        right: '0',\r\n        bottom: '0',\r\n        left: '0',\r\n        opacity: '0.5',\r\n        width: '100%',\r\n        height: '100vh'\r\n      }} >\r\n     </div>\r\n       <div style={{\r\n         width: '100%', height: '100%', display: 'flex',\r\n         justifyContent: 'center', alignItems: 'center', margin: '0 auto',\r\n         position: 'fixed', left: '0', top: '0', zIndex: '9999',\r\n         opacity: '.5'\r\n       }}>\r\n         <ClipLoader loading={props.loading} size={100} />\r\n       </div>\r\n       </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Spinner;",{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":1,"column":8,"nodeType":"208","messageId":"209","endLine":1,"endColumn":12},{"ruleId":"206","severity":1,"message":"210","line":9,"column":8,"nodeType":"208","messageId":"209","endLine":9,"endColumn":25},{"ruleId":"206","severity":1,"message":"211","line":29,"column":11,"nodeType":"208","messageId":"209","endLine":29,"endColumn":18},{"ruleId":"206","severity":1,"message":"212","line":33,"column":12,"nodeType":"208","messageId":"209","endLine":33,"endColumn":18},{"ruleId":"206","severity":1,"message":"213","line":33,"column":20,"nodeType":"208","messageId":"209","endLine":33,"endColumn":29},{"ruleId":"206","severity":1,"message":"214","line":36,"column":12,"nodeType":"208","messageId":"209","endLine":36,"endColumn":20},{"ruleId":"206","severity":1,"message":"215","line":36,"column":22,"nodeType":"208","messageId":"209","endLine":36,"endColumn":33},{"ruleId":"216","severity":1,"message":"217","line":42,"column":56,"nodeType":"218","messageId":"219","endLine":42,"endColumn":58},{"ruleId":"216","severity":1,"message":"217","line":42,"column":106,"nodeType":"218","messageId":"219","endLine":42,"endColumn":108},{"ruleId":"216","severity":1,"message":"217","line":64,"column":27,"nodeType":"218","messageId":"219","endLine":64,"endColumn":29},{"ruleId":"216","severity":1,"message":"217","line":64,"column":55,"nodeType":"218","messageId":"219","endLine":64,"endColumn":57},{"ruleId":"216","severity":1,"message":"217","line":68,"column":34,"nodeType":"218","messageId":"219","endLine":68,"endColumn":36},{"ruleId":"216","severity":1,"message":"217","line":68,"column":62,"nodeType":"218","messageId":"219","endLine":68,"endColumn":64},{"ruleId":"206","severity":1,"message":"220","line":78,"column":9,"nodeType":"208","messageId":"209","endLine":78,"endColumn":20},{"ruleId":"202","replacedBy":"221"},{"ruleId":"204","replacedBy":"222"},{"ruleId":"206","severity":1,"message":"223","line":12,"column":8,"nodeType":"208","messageId":"209","endLine":12,"endColumn":16},{"ruleId":"206","severity":1,"message":"224","line":25,"column":8,"nodeType":"208","messageId":"209","endLine":25,"endColumn":12},{"ruleId":"206","severity":1,"message":"225","line":26,"column":8,"nodeType":"208","messageId":"209","endLine":26,"endColumn":19},{"ruleId":"206","severity":1,"message":"226","line":28,"column":10,"nodeType":"208","messageId":"209","endLine":28,"endColumn":14},{"ruleId":"206","severity":1,"message":"227","line":29,"column":8,"nodeType":"208","messageId":"209","endLine":29,"endColumn":18},{"ruleId":"206","severity":1,"message":"228","line":75,"column":17,"nodeType":"208","messageId":"209","endLine":75,"endColumn":20},{"ruleId":"206","severity":1,"message":"229","line":78,"column":12,"nodeType":"208","messageId":"209","endLine":78,"endColumn":19},{"ruleId":"206","severity":1,"message":"230","line":78,"column":21,"nodeType":"208","messageId":"209","endLine":78,"endColumn":31},{"ruleId":"206","severity":1,"message":"231","line":88,"column":12,"nodeType":"208","messageId":"209","endLine":88,"endColumn":18},{"ruleId":"206","severity":1,"message":"232","line":90,"column":19,"nodeType":"208","messageId":"209","endLine":90,"endColumn":27},{"ruleId":"216","severity":1,"message":"217","line":98,"column":20,"nodeType":"218","messageId":"219","endLine":98,"endColumn":22},{"ruleId":"216","severity":1,"message":"217","line":101,"column":27,"nodeType":"218","messageId":"219","endLine":101,"endColumn":29},{"ruleId":"216","severity":1,"message":"217","line":127,"column":20,"nodeType":"218","messageId":"219","endLine":127,"endColumn":22},{"ruleId":"216","severity":1,"message":"217","line":129,"column":27,"nodeType":"218","messageId":"219","endLine":129,"endColumn":29},{"ruleId":"206","severity":1,"message":"226","line":2,"column":10,"nodeType":"208","messageId":"209","endLine":2,"endColumn":14},{"ruleId":"206","severity":1,"message":"233","line":9,"column":9,"nodeType":"208","messageId":"209","endLine":9,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":31,"column":8,"nodeType":"236","endLine":31,"endColumn":10,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":88,"column":58,"nodeType":"218","messageId":"240","endLine":88,"endColumn":59},{"ruleId":"241","severity":1,"message":"242","line":88,"column":79,"nodeType":"243","endLine":88,"endColumn":82},{"ruleId":"206","severity":1,"message":"244","line":1,"column":38,"nodeType":"208","messageId":"209","endLine":1,"endColumn":44},{"ruleId":"206","severity":1,"message":"245","line":10,"column":22,"nodeType":"208","messageId":"209","endLine":10,"endColumn":30},{"ruleId":"206","severity":1,"message":"246","line":31,"column":9,"nodeType":"208","messageId":"209","endLine":31,"endColumn":21},{"ruleId":"206","severity":1,"message":"247","line":32,"column":9,"nodeType":"208","messageId":"209","endLine":32,"endColumn":16},{"ruleId":"206","severity":1,"message":"248","line":36,"column":12,"nodeType":"208","messageId":"209","endLine":36,"endColumn":22},{"ruleId":"206","severity":1,"message":"249","line":38,"column":12,"nodeType":"208","messageId":"209","endLine":38,"endColumn":16},{"ruleId":"206","severity":1,"message":"250","line":38,"column":18,"nodeType":"208","messageId":"209","endLine":38,"endColumn":25},{"ruleId":"234","severity":1,"message":"251","line":47,"column":8,"nodeType":"236","endLine":47,"endColumn":10,"suggestions":"252"},{"ruleId":"206","severity":1,"message":"253","line":69,"column":11,"nodeType":"208","messageId":"209","endLine":69,"endColumn":29},{"ruleId":"254","severity":1,"message":"255","line":110,"column":75,"nodeType":"256","endLine":110,"endColumn":96},{"ruleId":"257","severity":1,"message":"258","line":133,"column":25,"nodeType":"243","endLine":133,"endColumn":203},{"ruleId":"206","severity":1,"message":"259","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":19},{"ruleId":"206","severity":1,"message":"228","line":18,"column":11,"nodeType":"208","messageId":"209","endLine":18,"endColumn":14},{"ruleId":"206","severity":1,"message":"245","line":2,"column":22,"nodeType":"208","messageId":"209","endLine":2,"endColumn":30},{"ruleId":"257","severity":1,"message":"258","line":58,"column":21,"nodeType":"243","endLine":58,"endColumn":232},{"ruleId":"206","severity":1,"message":"245","line":2,"column":22,"nodeType":"208","messageId":"209","endLine":2,"endColumn":30},{"ruleId":"234","severity":1,"message":"251","line":63,"column":8,"nodeType":"236","endLine":63,"endColumn":10,"suggestions":"260"},{"ruleId":"257","severity":1,"message":"258","line":72,"column":21,"nodeType":"243","endLine":74,"endColumn":41},{"ruleId":"254","severity":1,"message":"255","line":78,"column":71,"nodeType":"256","endLine":78,"endColumn":92},{"ruleId":"206","severity":1,"message":"261","line":1,"column":25,"nodeType":"208","messageId":"209","endLine":1,"endColumn":33},{"ruleId":"234","severity":1,"message":"262","line":51,"column":8,"nodeType":"236","endLine":51,"endColumn":10,"suggestions":"263"},{"ruleId":"216","severity":1,"message":"217","line":66,"column":32,"nodeType":"218","messageId":"219","endLine":66,"endColumn":34},{"ruleId":"206","severity":1,"message":"244","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":23},{"ruleId":"206","severity":1,"message":"259","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":19},{"ruleId":"206","severity":1,"message":"226","line":10,"column":10,"nodeType":"208","messageId":"209","endLine":10,"endColumn":14},{"ruleId":"206","severity":1,"message":"264","line":10,"column":16,"nodeType":"208","messageId":"209","endLine":10,"endColumn":29},{"ruleId":"206","severity":1,"message":"265","line":11,"column":8,"nodeType":"208","messageId":"209","endLine":11,"endColumn":13},{"ruleId":"206","severity":1,"message":"266","line":12,"column":8,"nodeType":"208","messageId":"209","endLine":12,"endColumn":16},{"ruleId":"206","severity":1,"message":"267","line":13,"column":8,"nodeType":"208","messageId":"209","endLine":13,"endColumn":12},{"ruleId":"257","severity":1,"message":"258","line":131,"column":21,"nodeType":"243","endLine":131,"endColumn":232},{"ruleId":"206","severity":1,"message":"244","line":1,"column":17,"nodeType":"208","messageId":"209","endLine":1,"endColumn":23},{"ruleId":"206","severity":1,"message":"259","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":19},{"ruleId":"206","severity":1,"message":"264","line":10,"column":16,"nodeType":"208","messageId":"209","endLine":10,"endColumn":29},{"ruleId":"206","severity":1,"message":"265","line":11,"column":8,"nodeType":"208","messageId":"209","endLine":11,"endColumn":13},{"ruleId":"206","severity":1,"message":"266","line":12,"column":8,"nodeType":"208","messageId":"209","endLine":12,"endColumn":16},{"ruleId":"206","severity":1,"message":"267","line":13,"column":8,"nodeType":"208","messageId":"209","endLine":13,"endColumn":12},{"ruleId":"257","severity":1,"message":"258","line":133,"column":21,"nodeType":"243","endLine":133,"endColumn":232},{"ruleId":"206","severity":1,"message":"224","line":2,"column":8,"nodeType":"208","messageId":"209","endLine":2,"endColumn":12},{"ruleId":"206","severity":1,"message":"259","line":4,"column":8,"nodeType":"208","messageId":"209","endLine":4,"endColumn":19},{"ruleId":"206","severity":1,"message":"225","line":5,"column":8,"nodeType":"208","messageId":"209","endLine":5,"endColumn":19},{"ruleId":"206","severity":1,"message":"268","line":6,"column":8,"nodeType":"208","messageId":"209","endLine":6,"endColumn":14},{"ruleId":"206","severity":1,"message":"269","line":7,"column":8,"nodeType":"208","messageId":"209","endLine":7,"endColumn":18},{"ruleId":"206","severity":1,"message":"270","line":8,"column":8,"nodeType":"208","messageId":"209","endLine":8,"endColumn":15},{"ruleId":"206","severity":1,"message":"226","line":11,"column":10,"nodeType":"208","messageId":"209","endLine":11,"endColumn":14},{"ruleId":"206","severity":1,"message":"228","line":18,"column":11,"nodeType":"208","messageId":"209","endLine":18,"endColumn":14},{"ruleId":"206","severity":1,"message":"271","line":6,"column":7,"nodeType":"208","messageId":"209","endLine":6,"endColumn":15},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'SideNavigationBar' is defined but never used.","'classes' is assigned a value but never used.","'loader' is assigned a value but never used.","'setloader' is assigned a value but never used.","'didMount' is assigned a value but never used.","'setDidMount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'refreshForm' is assigned a value but never used.",["272"],["273"],"'MailIcon' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Link' is defined but never used.","'UserDetail' is defined but never used.","'url' is assigned a value but never used.","'spacing' is assigned a value but never used.","'setSpacing' is assigned a value but never used.","'MenuId' is assigned a value but never used.","'setmenue' is assigned a value but never used.","'logout' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBatchData'. Either include it or remove the dependency array.","ArrayExpression",["274"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useRef' is defined but never used.","'useTheme' is defined but never used.","'sessionIndex' is defined but never used.","'batchId' is defined but never used.","'batchIdVal' is assigned a value but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSessions'. Either include it or remove the dependency array.",["275"],"'showSessionDetails' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'CardActions' is defined but never used.",["276"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getSession' and 'querySessionId'. Either include them or remove the dependency array.",["277"],"'useRouteMatch' is defined but never used.","'Modal' is defined but never used.","'Backdrop' is defined but never used.","'Fade' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'Divider' is defined but never used.","'override' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"280","fix":"282"},{"desc":"283","fix":"284"},"Update the dependencies array to be: [getBatchData]",{"range":"285","text":"286"},"Update the dependencies array to be: [getSessions]",{"range":"287","text":"288"},{"range":"289","text":"288"},"Update the dependencies array to be: [getSession, querySessionId]",{"range":"290","text":"291"},[850,852],"[getBatchData]",[1614,1616],"[getSessions]",[2057,2059],[1717,1719],"[getSession, querySessionId]"]